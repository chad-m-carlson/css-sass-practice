$color-primary: #55c57a;
$color-primary-light: #7ed56f;
$color-primary-dark: #28b485;
$color-grey-dark: #777;
$color-white: #fff;
$color-black: #000;

*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
  /* If you set an element's width to 100 pixels, then the element's content box will be 100 pixels wide, and the width of any border or padding will be added to the final rendered width */
}

html {
  font-size: 62.5%;
}

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  /* font-size: 1.6rem; */
  line-height: 1.7;
  color: $color-grey-dark;
  padding: 3rem;
  box-sizing: border-box; 
}

.header {
  position: relative;
  height: 95vh;
  background-image: linear-gradient(
    to right bottom,
    rgba($color-primary-light, 0.8),
    rgba($color-primary-dark, 0.8)), 
   url(../img/hero.jpg);
  background-size: cover;
  /* Scales the image as large as possible without stretching the image. If the proportions of the image differ from the element, it is cropped either vertically or horizontally so that no empty space remains. */
  background-position: top;
  /* image top is always the same, and will crop the bottom when screen resizes
   */
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
   /* property creates a clipping region that sets what part of an element should be shown. Parts that are inside the region are shown, while those outside are hidden. */

   &__logo-box {
    position: absolute;
    /* references the parent element. */
    top: 4rem;
    left: 4rem;
   }

   &__logo {
    height: 3.5rem;
    /* width will then be scaled by the browswer */
   }

   &__text-box{
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    /* function repositions an element in the horizontal and/or vertical directions. Its result is a <transform-function> data type. */
    text-align: center;
  }
}


.heading-primary {
  color: $color-white;
  text-transform: uppercase;
  backface-visibility: hidden;
  margin-bottom: 6rem;

  &--main{
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out
  }

  &--sub{
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.75rem;
    animation: moveInRight 1s ease-out;
  }
}



@keyframes moveInLeft{
  0% {
    opacity: 0;
    transform: translateX(-10rem)
  }
  80%{
    transform: translateX(1rem)
  }
  100%{
    opacity: 1;
    transform: translate(0)
  }
}

@keyframes moveInRight{
  0% {
    opacity: 0;
    transform: translateX(10rem)
  }
  80%{
    transform: translateX(-1rem)
  }
  100%{
    opacity: 1;
    transform: translate(0)
  }
}

@keyframes moveInBottom{
  0% {
    opacity: 0;
    transform: translateY(3rem)
  }
  100%{
    opacity: 1;
    transform: translate(0)
  }
}

.btn {
  &:link,
  &:visited {
    font-size: 1.6rem;
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    border-radius: 10rem;
    display: inline-block; /*  treats element as text */
    transition: all .2s; /* transition needs to be on parent for animations */
    position: relative;
    /* set position relative so children with absolute position will reference it */
  }
  &:hover{
    transform: translateY(-.3rem);
    box-shadow: 0 1rem 2rem rgba($color-black,.2);
    /* X axis, Y axis, blur, color */
    &::after {
      transform: scaleX(1.4) scaleY(1.6);
      opacity: 0;
    }
  }
  
  &:active{
    transform: translateY(-.1rem);
    box-shadow: 0 .5rem 1rem rgba($color-black,.2);
  }
  
  &--white{
    background-color: $color-white;
    color: $color-grey-dark;
        
    &::after{
      background-color: $color-white;
    }
  }
  
  &::after {
    content: '';
    display: inline-block;
    /* content is always necessary, even if its empty, display is always requried */
    height: 100%;
    width: 100%;
    border-radius: 10rem;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all .4s 
  }

  &--animated{
    animation: moveInBottom .5s ease-out .75s;
    animation-fill-mode: backwards;
    /* styles will be applied before the animation starts */
  }
}
  
  